{% extends '@App/base.html.twig' %}

{% import "@App/Common/Blocks/header.html.twig" as  header %}
{% import "@App/Components/Blocks/Footer/annotation.html.twig" as  footer %}
{% import "@App/Common/Blocks/slider.html.twig" as  slider %}
{% import "@App/Components/Blocks/Main/elect.html.twig" as  elect %}
{% import "@App/Components/Blocks/Main/subscription_status.html.twig" as  subscription_status %}
{% import "@App/Components/player.html.twig" as  player %}
{% import "@App/Components/Blocks/Footer/menu.html.twig" as  footer_menu %}
{% import '@App/Components/Buttons/gray_button.html.twig' as button_gray %}
{% import "@App/Components/Blocks/Main/mirror_separator.html.twig" as  mirror_separator %}
{% import "@App/Components/Blocks/Main/video_preview.html.twig" as  video_preview %}

{% block stylesheets %}
    {{ parent() }}
    <link href="{{ asset('/css/category.css') }}" rel="stylesheet">
{% endblock %}

{% block header_content %}
    {{ header.render() }}
{% endblock header_content %}

{% block body %}
    <div class="d-flex flex-column w-100">
        <div class="menu-block">
            <div class="category-select-description">
                {{ translate('category.title') }}
            </div>
            <div class="category-block">
                <div class="d-flex flex-row category-content-open-link x-show-subcategory-button">
                    <div class="category-title {% if not selectedSubcategory %}active{% endif %}">
                        <a href="{{ path('show_category',{'categoryUuid':category.uuid}) }}">
                            {{ category.title }}
                        </a>
                    </div>
                </div>
            </div>
        </div>

        {% if videos | length > 0 %}
            <div class="active-category-container">
                <div class="d-flex flex-column">
                    <div class="d-flex flex-column align-items-center justify-content-center">
                        {{ video_preview.render('w-100 default-video-thumbnail-wrapper x-play-button', defaultVideo) }}
                        <div id="video-player-title" class="video-player-title text-center">
                            {{ defaultVideo.title }}
                        </div>
                    </div>
                </div>

                {% set relatedVideos = videos | slice(1) %}
                {% if relatedVideos | length > 0 %}
                    {{ mirror_separator.render(translate('category.related_videos'), 'category__related_title my-4') }}
                    <div class="related-videos-section-container">
                        <div class="d-flex flex-column related-videos-block">
                            {% for video in videos | slice(1) %}
                                {{ video_preview.render('d-flex flex-row related-video x-play-button', video) }}
                            {% endfor %}
                        </div>
                        {% if not isLast %}
                            <div class="games-page-container">
                                <div class="d-flex flex-wrap align-items-center justify-content-around x-games-block"></div>
                                <div class="load-more-button-block d-flex align-items-center justify-content-center">
                                    <div>{{ button_gray.render('Load More', 'load-more-button x-load-more-videos-button') }}</div>
                                </div>
                            </div>
                        {% endif %}
                    </div>
                {% endif %}
            </div>
        {% endif %}

        {{ mirror_separator.render('', 'mt-4 mb-5') }}
    </div>

    {{ player.render() }}
    {{ slider.render() }}
    {{ elect.render() }}

    <script>
        let isLast = false;
        let offset = 20;
        const batchSize = 20;
        const loadMoreVideoLink = '{{ path('load_more_video') }}';
        const loadMoreBtn = $('.x-load-more-videos-button');

        $(document).on('click', '.x-show-subcategory-button', (e) =>  {
            e.preventDefault();

            var elem = $(this);

            var parent = elem.parents('.category-block');
            parent.toggleClass('expanded');

            parent.find('.category-content').toggleClass('d-none');
        });

        if(!isLast) {
            loadMoreBtn.click(() => {
                const defaultVideoRemoteId = '{{ defaultVideo.publicId }}';
                let link = `${loadMoreVideoLink}?videoPublicId=${defaultVideoRemoteId}&offset=${Number(offset)}`;
                let button = $(this);

                $.ajax({
                    url: link,
                    method: 'GET',
                    beforeSend: () => {
                        button.attr('disabled', true)
                    },
                    complete  : () => {
                        button.attr('disabled', false)
                    },
                    success   : (data) => {
                        $('.related-videos-block').append(data.html);

                        if(data.isLast) {
                            isLast = true;
                            loadMoreBtn.hide()
                        }

                        offset += batchSize
                    },
                    error: (e) => {
                        throw e
                    }

                })
            });
        }
    </script>
{% endblock %}

{% block footer_content %}
    {{ footer_menu.render() }}
{% endblock footer_content %}