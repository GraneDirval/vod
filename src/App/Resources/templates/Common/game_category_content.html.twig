{% extends '@App/base.html.twig' %}
{% import "@App/Common/Blocks/header.html.twig" as  header %}
{% import '@App/Components/Buttons/small_button.html.twig' as button %}
{% import '@App/Components/Buttons/gray_button.html.twig' as button_gray %}
{% import "@App/Components/Blocks/Header/subscription_heading.html.twig" as  subscription_heading %}

{% block stylesheets %}
    {{ parent() }}
    <link href="{{ asset('/css/games.css') }}" rel="stylesheet">
{% endblock %}


{% block header_content %}
    <div class="w-100">
        {{ header.render('Sports games') }}
    </div>

{% endblock header_content %}

{% block body %}

    <div class="games-page-container">
        <div class="d-flex flex-wrap align-items-center justify-content-around x-games-block"></div>
        <div class="load-more-button-block d-flex align-items-center justify-content-center">
            <div>{{ button_gray.render('Load More', 'load-more-button x-load-more-button') }}</div>
        </div>
    </div>

    <script id="game-download-button" type="text/x-handlebars">
        {{ button.render(translate('buttons.download'), 'game-download-button x-game-download-button') }}
    </script>

    <script id="game-item-template" type="text/x-handlebars">
        {% verbatim %}
            <div class="d-flex flex-column  x-game-element game-wrapper" data-uuid="{{game.uuid}}">
                <div class="game">
                    <div class="game-image-block">
                        <a class="" href="{{ gameLink }}">
                            <img class="img-fluid" src="{{ game.iconPath }}" alt="{{ game.uuid }}"/>
                        </a>
                    </div>
                    <div class="game-info-block">
                        <div class="game-title-block">
                            {{ game.title }}
                        </div>
                        <div class="game-download-button-block">
                            {{#if hasActiveSubscription}}
                                {{{buttonHtml}}}
                            {{/if}}
                        </div>
                    </div>
                </div>
            </div>
        {% endverbatim %}
    </script>

    <script>


        (function () {
            var batchSize             = 4;
            var offset                = 0;
            var loadMorePath          = '{{ path('load_more') }}';
            var downloadGamePath      = '{{ path('download_game') }}';
            var gameLink              = '{{ path('game_content') }}';
            var hasActiveSubscription = '{{ hasActiveSubscription() }}';

            doLoadMore();

            $(document).on('click', '.x-load-more-button', function () {
                doLoadMore();
            });

            $(document).on('click', '.x-game-download-button', function () {
                var button = $(this);
                var parent = button.parents('.x-game-element');
                var uuid   = parent.attr('data-uuid');
                var link   = downloadGamePath + '?id=' + uuid;

                $.ajax({
                    url       : link,
                    method    : 'GET',
                    beforeSend: function () {
                        button.attr('disabled', 1)
                    },
                    complete  : function () {
                        button.attr('disabled', null)
                    },
                    success   : function (data) {
                        if (data.url) {
                            window.location = data.url;
                        }else{
                            showPopup({title: 'Internal error. Please try again later'})
                        }
                    }
                })
            });


            function disableLoadMoreButton() {
                $('.x-load-more-button').attr('disabled', 1)
            }

            function enableLoadMoreButton() {
                $('.x-load-more-button').attr('disabled', null)
            }

            function compileButtonTemplate() {
                var buttonSrc = document.getElementById("game-download-button").innerHTML;
                var buttonTemplate = Handlebars.compile(buttonSrc);
                return buttonTemplate;
            }

            function compileGameTemplate() {
                var source = document.getElementById("game-item-template").innerHTML;
                var template = Handlebars.compile(source);
                return template;
            }

            function hideLoadMoreButton() {
                $('.x-load-more-button').hide()
            }

            function doLoadMore() {
                $.ajax({
                    url       : loadMorePath + '?offset=' + offset,
                    method    : 'GET',
                    beforeSend: function () {
                        disableLoadMoreButton()
                    },
                    complete  : function () {
                        enableLoadMoreButton()
                    },
                    success   : function (data) {
                        var buttonTemplate = compileButtonTemplate();
                        var gameTemplate   = compileGameTemplate();

                        data.games.forEach(function (game) {
                            var html = gameTemplate({
                                'game'                 : game,
                                'buttonHtml'           : buttonTemplate(),
                                'hasActiveSubscription': hasActiveSubscription,
                                'gameLink'             : gameLink + '/' + game.uuid
                            });
                            $('.x-games-block').append(html);
                        });
                        offset += batchSize;

                        if (data.isLast) {
                            hideLoadMoreButton()
                        }
                    }
                })
            }
        })();

    </script>

{% endblock %}
