services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
          # fetching services directly from the container via $container->get() won't work.
        # The best practice is to be explicit about your dependencies anyway.

        # makes classes in src/ available to be used as services
        # this creates a service per class whose id is the fully-qualified class name
        # App\:
        #     resource: '../src/App/*'
        #     exclude: '../src/App/{DependencyInjection,Entity,Migrations}'

        # controllers are imported separately to make sure services can be injected
        # as action arguments even if you don't extend any base controller class
        # App\Controller\:
        #     resource: '../src/App/Controller'
        #     tags: ['controller.service_arguments']

        # add more service definitions when explicit configuration is needed
        # please note that last definitions always *replace* previous ones

    App\Domain\Service\VideoProcessing\Connectors\CloudinaryConnector:
        arguments:
            - '%cloudinary_api_key%'
            - '%cloudinary_api_secret%'
            - '%cloudinary_cloud_name%'

    App\Domain\Service\VideoProcessing\VideoUploader:
        arguments:
            - '@App\Domain\Repository\UploadedVideoRepository'
            - '@App\Domain\Service\VideoProcessing\Connectors\CloudinaryConnector'
            - '@router'
            - '@doctrine.orm.entity_manager'
            - '%host%'

    App\Domain\Service\VideoProcessing\Callback\EagerType:
        arguments: ['@App\Domain\Repository\UploadedVideoRepository', '@doctrine.orm.entity_manager']

    App\Domain\Service\VideoProcessing\CallbackVoter:
        arguments: ['@App\Domain\Service\VideoProcessing\Connectors\CloudinaryConnector']

    App\Domain\Service\AWSS3\S3Client:
        public: true
        arguments:
            -
              credentials:
                  key: '%aws_s3_key%'
                  secret: '%aws_s3_secret%'
              version: '%aws_s3_version%'
              region: '%aws_s3_region%'

    App\Domain\Service\CampaignService:
        public: true