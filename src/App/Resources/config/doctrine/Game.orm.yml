App\Domain\Entity\Game:
    type: entity
    table: games
    repositoryClass: App\Domain\Repository\GameRepository
    id:
        uuid:
            type: guid
    fields:
        title:
            type: string
            gedmo:
                - translatable
        description:
            type: text
            gedmo:
                - translatable
        icon:
            type: string
        thumbnail:
            type: string
        rating:
            type: integer
        published:
            type: boolean
            options:
                default: false
        isBookmark:
            type: boolean
            options:
                default: false
        created:
            type: datetime
            gedmo:
                timestampable:
                    on: create
        updated:
            type: datetime
            gedmo:
                timestampable:
                    on: update
        deletedAt:
            type: date
            nullable: true

    lifecycleCallbacks: {  }

    manyToOne:
        developer:
            targetEntity: Developer
            inversedBy: games
            joinColumn:
                name: developer_id
                referencedColumnName: uuid
    oneToMany:
        images:
            targetEntity: App\Domain\Entity\GameImage
            joinColumn:
                referencedColumnName: uuid
            mappedBy: game
            cascade: ["persist", "remove"]
            orphanRemoval: true
#            TODO: do we need this?
#        translations:
#            targetEntity: App\Domain\Entity\GameTranslation
#            joinColumn:
#                referencedColumnName: uuid
#            mappedBy: object
#            cascade: ["persist", "remove"]
        builds:
            targetEntity: App\Domain\Entity\GameBuild
            mappedBy: game
            cascade: ["persist", "remove"]
            orphanRemoval: true